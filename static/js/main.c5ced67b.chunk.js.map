{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layouts/Header.js","components/pages/About.js","components/pages/NotFound.js","components/tests/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","console","log","finish","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layouts_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","string","title","body","fetch","then","response","json","App","context_Provider","BrowserRouter","basename","process","layouts_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5ced67b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n   switch (action.type) {\r\n      case 'DELETE_CONTACT':\r\n         return {\r\n            ...state,\r\n            contacts: state.contacts.filter(\r\n               contact => contact.id !== action.payload\r\n            )\r\n         };\r\n      case 'ADD_CONTACT':\r\n         return {\r\n            ...state,\r\n            contacts: [action.payload, ...state.contacts]\r\n         };\r\n      case 'UPDATE_CONTACT':\r\n         return {\r\n            ...state,\r\n            contacts: state.contacts.map(contact =>\r\n               contact.id === action.payload.id\r\n                  ? (contact = action.payload)\r\n                  : contact\r\n            )\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport class Provider extends Component {\r\n   state = {\r\n      contacts: [],\r\n\r\n      dispatch: action => this.setState(state => reducer(state, action))\r\n   };\r\n\r\n   async componentDidMount() {\r\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users`);\r\n\r\n      this.setState({ contacts: res.data });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n         </Context.Provider>\r\n      );\r\n   }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n   state = {\r\n      showContactInfo: false\r\n   };\r\n\r\n   // A GOOD EXAMPLE TO TRY AND CATCH!!! YAY, IT'S NICE TO SEE IT ACTUALLY USED IN AN APPLICATION, OF COURSE, IF THIS WERE A PRODUCTION APP, YOU WOULD NEVER DO THIS. MAINLY BECAUSE YOU WOULD BE PERSISTING IT TO A DB!!! BUT, STILL, IT WORKS WELL HERE, IN ORDER TO KEEP OUR APP FROM BREAKING!!!!\r\n\r\n   onDeleteClick = async (id, dispatch) => {\r\n      try {\r\n         await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n      } catch (e) {\r\n         console.log(\"You can't really delete the website's shit...\");\r\n      } finally {\r\n         dispatch({\r\n            type: 'DELETE_CONTACT',\r\n            payload: id\r\n         });\r\n      }\r\n   };\r\n\r\n   render() {\r\n      const { name, email, phone, id } = this.props.contact;\r\n      const { showContactInfo } = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { dispatch } = value;\r\n               return (\r\n                  <div className=\"card card-body mb-3\">\r\n                     <h4>\r\n                        {name}{' '}\r\n                        <i\r\n                           onClick={() =>\r\n                              this.setState({\r\n                                 showContactInfo: !this.state.showContactInfo\r\n                              })\r\n                           }\r\n                           className=\"fas fa-sort-down\"\r\n                           style={{ cursor: 'pointer' }}\r\n                        />\r\n                        <i\r\n                           className=\"fas fa-times\"\r\n                           style={{\r\n                              cursor: 'pointer',\r\n                              float: 'right',\r\n                              color: 'red'\r\n                           }}\r\n                           onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                        />\r\n                        <Link to={`contact/edit/${id}`}>\r\n                           <i\r\n                              className=\"fas fa-pencil-alt\"\r\n                              style={{\r\n                                 float: 'right',\r\n                                 cursor: 'pointer',\r\n                                 color: 'black',\r\n                                 marginRight: '1rem'\r\n                              }}\r\n                           />\r\n                        </Link>\r\n                     </h4>\r\n                     {showContactInfo ? (\r\n                        <ul className=\"list-group\">\r\n                           <li className=\"list-group-item\">{email}</li>\r\n                           <li className=\"list-group-item\">{phone}</li>\r\n                        </ul>\r\n                     ) : null}\r\n                  </div>\r\n               );\r\n            }}\r\n         </Consumer>\r\n      );\r\n   }\r\n}\r\n\r\nContact.propTypes = {\r\n   contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n   render() {\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { contacts } = value;\r\n               return (\r\n                  <React.Fragment>\r\n                     <h1 className=\"display-4 mb-2\">\r\n                        <span className=\"text-danger\">Contact</span>List\r\n                     </h1>\r\n                     {contacts.map(contact => (\r\n                        <Contact key={contact.id} contact={contact} />\r\n                     ))}\r\n                  </React.Fragment>\r\n               );\r\n            }}\r\n         </Consumer>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n   label,\r\n   name,\r\n   value,\r\n   placeholder,\r\n   type,\r\n   onChange,\r\n   error\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <label htmlFor={name}>{label}</label>\r\n         <input\r\n            type={type}\r\n            name={name}\r\n            className={classnames('form-control form-control-lg', {\r\n               'is-invalid': error\r\n            })}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={onChange}\r\n         />\r\n         {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n   );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n   name: PropTypes.string.isRequired,\r\n   placeholder: PropTypes.string.isRequired,\r\n   value: PropTypes.string.isRequired,\r\n   type: PropTypes.string.isRequired,\r\n   onChange: PropTypes.func.isRequired,\r\n   label: PropTypes.string.isRequired,\r\n   error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n   type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layouts/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n   state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n   };\r\n\r\n   onSubmit = async (dispatch, e) => {\r\n      e.preventDefault();\r\n\r\n      const { name, email, phone } = this.state;\r\n\r\n      // CHECK FOR ERRORS\r\n      if (name === '') {\r\n         return this.setState({ errors: { name: 'Name is required' } });\r\n      }\r\n\r\n      if (email === '') {\r\n         return this.setState({ errors: { email: 'Email is required' } });\r\n      }\r\n\r\n      if (phone === '') {\r\n         return this.setState({\r\n            errors: { phone: 'Phone Number is required' }\r\n         });\r\n      }\r\n\r\n      const newContact = {\r\n         name,\r\n         email,\r\n         phone\r\n      };\r\n\r\n      const res = await axios.post(\r\n         'http://jsonplaceholder.typicode.com/users',\r\n         newContact\r\n      );\r\n\r\n      dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n      // CLEARS THE STATE!!! LIKE A FUCKING BOSS!!!\r\n      this.setState({\r\n         name: '',\r\n         email: '',\r\n         phone: '',\r\n         errors: ''\r\n      });\r\n\r\n      this.props.history.push('/');\r\n   };\r\n\r\n   onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n   render() {\r\n      const { name, email, phone, errors } = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { dispatch } = value;\r\n               return (\r\n                  <div className=\"card mb-3\">\r\n                     <div className=\"card-header\">Add Contact</div>\r\n                     <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                           <TextInputGroup\r\n                              label=\"Name\"\r\n                              name=\"name\"\r\n                              placeholder=\"Enter Name\"\r\n                              type=\"text\"\r\n                              value={name}\r\n                              onChange={this.onChange}\r\n                              error={errors.name}\r\n                           />\r\n                           <TextInputGroup\r\n                              label=\"Email\"\r\n                              name=\"email\"\r\n                              placeholder=\"Enter Email\"\r\n                              type=\"email\"\r\n                              value={email}\r\n                              onChange={this.onChange}\r\n                              error={errors.email}\r\n                           />\r\n                           <TextInputGroup\r\n                              label=\"Phone Number\"\r\n                              name=\"phone\"\r\n                              placeholder=\"Enter Phone Number\"\r\n                              type=\"text\"\r\n                              value={phone}\r\n                              onChange={this.onChange}\r\n                              error={errors.phone}\r\n                           />\r\n                           <input\r\n                              type=\"submit\"\r\n                              value=\"Add Contact\"\r\n                              className=\"btn btn-danger btn-block\"\r\n                           />\r\n                        </form>\r\n                     </div>\r\n                  </div>\r\n               );\r\n            }}\r\n         </Consumer>\r\n      );\r\n   }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layouts/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n   state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n   };\r\n\r\n   async componentDidMount() {\r\n      const { id } = this.props.match.params;\r\n      const res = await axios.get(\r\n         `https://jsonplaceholder.typicode.com/users/${id}`\r\n      );\r\n\r\n      const contact = res.data;\r\n      this.setState({\r\n         name: contact.name,\r\n         email: contact.email,\r\n         phone: contact.phone\r\n      });\r\n   }\r\n\r\n   onSubmit = async (dispatch, e) => {\r\n      e.preventDefault();\r\n\r\n      const { name, email, phone } = this.state;\r\n\r\n      // CHECK FOR ERRORS\r\n      if (name === '') {\r\n         return this.setState({ errors: { name: 'Name is required' } });\r\n      }\r\n\r\n      if (email === '') {\r\n         return this.setState({ errors: { email: 'Email is required' } });\r\n      }\r\n\r\n      if (phone === '') {\r\n         return this.setState({\r\n            errors: { phone: 'Phone Number is required' }\r\n         });\r\n      }\r\n\r\n      // MAKING A REQUEST FROM JSONPLACEHOLDER.\r\n      const updContact = {\r\n         name,\r\n         email,\r\n         phone\r\n      };\r\n\r\n      const { id } = this.props.match.params;\r\n\r\n      const res = await axios.put(\r\n         `https://jsonplaceholder.typicode.com/users/${id}`,\r\n         updContact\r\n      );\r\n\r\n      dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n      // CLEARS THE STATE!!! LIKE A FUCKING BOSS!!!\r\n      this.setState({\r\n         name: '',\r\n         email: '',\r\n         phone: '',\r\n         errors: ''\r\n      });\r\n\r\n      this.props.history.push('/');\r\n   };\r\n\r\n   onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n   render() {\r\n      const { name, email, phone, errors } = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { dispatch } = value;\r\n               return (\r\n                  <div className=\"card mb-3\">\r\n                     <div className=\"card-header\">Edit This Contact</div>\r\n                     <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                           <TextInputGroup\r\n                              label=\"Name\"\r\n                              name=\"name\"\r\n                              placeholder=\"Enter Name\"\r\n                              type=\"text\"\r\n                              value={name}\r\n                              onChange={this.onChange}\r\n                              error={errors.name}\r\n                           />\r\n                           <TextInputGroup\r\n                              label=\"Email\"\r\n                              name=\"email\"\r\n                              placeholder=\"Enter Email\"\r\n                              type=\"email\"\r\n                              value={email}\r\n                              onChange={this.onChange}\r\n                              error={errors.email}\r\n                           />\r\n                           <TextInputGroup\r\n                              label=\"Phone Number\"\r\n                              name=\"phone\"\r\n                              placeholder=\"Enter Phone Number\"\r\n                              type=\"text\"\r\n                              value={phone}\r\n                              onChange={this.onChange}\r\n                              error={errors.phone}\r\n                           />\r\n                           <input\r\n                              type=\"submit\"\r\n                              value=\"Update Contact\"\r\n                              className=\"btn btn-danger btn-block\"\r\n                           />\r\n                        </form>\r\n                     </div>\r\n                  </div>\r\n               );\r\n            }}\r\n         </Consumer>\r\n      );\r\n   }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n   const { branding } = props;\r\n   return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n         <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">\r\n               {branding}\r\n            </a>\r\n            <div>\r\n               <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/\" className=\"nav-link\">\r\n                        <i className=\"fas fa-home\" />\r\n                        Home\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/contact/add\" className=\"nav-link\">\r\n                        <i className=\"fas fa-plus\" />\r\n                        Add\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\" />\r\n                        About\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nHeader.defaultProps = {\r\n   branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n   branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default props => {\r\n   return (\r\n      <div>\r\n         <h1 className=\"display-4\">About Contact Manager</h1>\r\n         <p className=\"lead\">Simple App to Manage Contacts</p>\r\n         <p className=\"text-secondary\">Version 1.0.0</p>\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n   return (\r\n      <div>\r\n         <h1 className=\"display-4\">\r\n            <span className=\"text-danger\">404</span> Page Not Found\r\n         </h1>\r\n         <p className=\"lead\">Sorry That Page Does Not Exist</p>\r\n      </div>\r\n   );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n   state = {\r\n      string: \"I've got the pennies, yo!!\",\r\n      title: '',\r\n      body: ''\r\n   };\r\n\r\n   componentDidMount() {\r\n      fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n         .then(response => response.json())\r\n         .then(data =>\r\n            this.setState({\r\n               title: data.title,\r\n               body: data.body\r\n            })\r\n         );\r\n   }\r\n\r\n   //  componentWillMount() {\r\n   //     console.log('componentWillMount');\r\n   //  }\r\n\r\n   //  componentDidUpdate() {\r\n   //     console.log('componetDidUpdate');\r\n   //  }\r\n\r\n   //  componentWillReceiveProps(nextProps, nextState) {\r\n   //     console.log('componentWillReceiveProps...');\r\n   //  }\r\n\r\n   //  static getDerivedStateFromProps(nextProps, prevState) {\r\n   // return {\r\n   //  string: 'Ive got dollas yo!!'\r\n   // };\r\n   //  }\r\n\r\n   //  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n   // console.log(prevState);\r\n   //  }\r\n\r\n   render() {\r\n      const { string, title, body } = this.state;\r\n      return (\r\n         <div>\r\n            <h1>Test Component</h1>\r\n            <h2>{string}</h2>\r\n            <p>{title}</p>\r\n            <p>{body}</p>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layouts/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/tests/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n   render() {\n      return (\n         <Provider>\n            <Router basename={process.env.PUBLIC_URL}>\n               <div className=\"App\">\n                  <Header branding=\"Contact Manager\" />\n                  <div className=\"container\">\n                     <Switch>\n                        <Route exact path=\"/\" component={Contacts} />\n                        <Route\n                           exact\n                           path=\"/contact/add\"\n                           component={AddContact}\n                        />\n                        <Route\n                           exact\n                           path=\"/contact/edit/:id\"\n                           component={EditContact}\n                        />\n                        <Route exact path=\"/about\" component={About} />\n                        <Route exact path=\"/test\" component={Test} />\n                        <Route component={NotFound} />\n                     </Switch>\n                  </div>\n               </div>\n            </Router>\n         </Provider>\n      );\n   }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}